Module LightDMS
{
	Entity UndoCheckout
	{
		Logging { AllProperties; }

		Reference Repository LightDMS.DocumentRepository; 
		Guid DocumentID;
		Reference CreatedBy Common.Principal { SystemRequired; CreatedBy; }
		DateTime CreatedDate { DenyUserEdit; CreationTime; SystemRequired; }
		LongString Comment;

		Is LightDMS.DocumentEvent;

		SaveMethod
		{
			OnInitialization 'DeadlockPrevention' <DeadlockPrevention.cs>;
		}

		ComposableFilterBy DocumentNotCheckouted
		'(items, repository, filterParameter) =>
		{
            var itemsToCheck = items.Select(i => i.ID).ToList();
    		var invalidItems = repository.LightDMS.DocumentStatusBeforeEvent.Query(i => itemsToCheck.Contains(i.ID) && i.CheckoutID == null).Select(i => i.ID).ToList();
    		return items.Where(i => invalidItems.Contains(i.ID));
	  	}';
		InvalidData DocumentNotCheckouted 'Akcija nije moguća jer sadržaj niste rezervirali za uređivanje.';

        ComposableFilterBy OtherUserDocumentUndoCheckout '(items, repository, parameter, context) =>
		{							
			var claimCanUndoCheckoutForOtherUser = new List<Rhetos.Security.Claim>() { new Rhetos.Security.Claim("LightDMS.UndoCheckout", "CanUndoCheckoutForOtherUser") };
			var canUndoCheckoutForOtherUser = context.AuthorizationManager.GetAuthorizations(claimCanUndoCheckoutForOtherUser).FirstOrDefault();
			if(canUndoCheckoutForOtherUser)
			{
				return items.Where(i => false);
			}
			else
			{
				var itemList = items.Select(x => (Guid?)x.ID).ToList();
				return repository.LightDMS.DocumentEvent.Query()
					.Where(de =>
						itemList.Contains(de.UndoCheckoutID) &&
						de.Extension_DocumentStatusBeforeEvent.CheckoutID != null &&
						(de.Extension_DocumentStatusBeforeEvent.CheckedOutToID != de.UndoCheckout.CreatedByID)
					)
					.Select(de => de.UndoCheckout);
			}
		}
		'
		{
            UseExecutionContext;
        }

		InvalidData OtherUserDocumentUndoCheckout 'Akcija nije moguća jer je sadržaj rezerviran za uređivanje od strane drugog korisnika.';
	}
	
	Parameter OtherUserDocumentUndoCheckout;
	Parameter DocumentNotCheckouted;
}